'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.compareAndSet = compareAndSet;

var _utils = require('../../utils');

var _utils2 = _interopRequireDefault(_utils);

var _urls = require('../../urls');

var _urls2 = _interopRequireDefault(_urls);

var _index = require('../../request/index');

var _index2 = _interopRequireDefault(_index);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function compareAndSet(counterName, expected, updated, asyncHandler) {
  if (!counterName || !_utils2.default.isString(counterName)) {
    throw new Error('Counter Name must be non empty String');
  }

  if (!_utils2.default.isNumber(expected)) {
    throw new Error('Counter "expected" value must be Number');
  }

  if (!_utils2.default.isNumber(updated)) {
    throw new Error('Counter "updated" value must be Number');
  }

  if (asyncHandler) {
    asyncHandler = _utils2.default.wrapAsync(asyncHandler);
  }

  return _index2.default.put({
    url: _urls2.default.counterCompareAndSet(counterName),
    query: { expected: expected, updatedvalue: updated },
    isAsync: !!asyncHandler,
    asyncHandler: asyncHandler
  });
}