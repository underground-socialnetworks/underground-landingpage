'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _utils = require('../../utils');

var _utils2 = _interopRequireDefault(_utils);

var _urls = require('../../urls');

var _urls2 = _interopRequireDefault(_urls);

var _request = require('../../request');

var _request2 = _interopRequireDefault(_request);

var _async = require('../../request/async');

var _async2 = _interopRequireDefault(_async);

var _point = require('../point');

var _point2 = _interopRequireDefault(_point);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//TODO: refactor me

function runFenceAction(action, geoFenceName, geoPoint, asyncHandler) {
  if (geoPoint instanceof _async2.default) {
    asyncHandler = geoPoint;
    geoPoint = undefined;
  }

  if (!_utils2.default.isString(geoFenceName)) {
    throw new Error("Invalid value for parameter 'geoFenceName'. Geo Fence Name must be a String");
  }

  if (geoPoint && !(geoPoint instanceof _point2.default) && !geoPoint.objectId) {
    throw new Error('Method argument must be a valid instance of GeoPoint persisted on the server');
  }

  return _request2.default.post({
    url: _urls2.default.geoFence(action, geoFenceName),
    isAsync: !!asyncHandler,
    data: geoPoint,
    asyncHandler: asyncHandler
  });
}

var runOnStayAction = function runOnStayAction(geoFenceName, geoPoint, asyncHandler) {
  return runFenceAction('onstay', geoFenceName, geoPoint, asyncHandler);
};

var runOnExitAction = function runOnExitAction(geoFenceName, geoPoint, asyncHandler) {
  return runFenceAction('onexit', geoFenceName, geoPoint, asyncHandler);
};

var runOnEnterAction = function runOnEnterAction(geoFenceName, geoPoint, asyncHandler) {
  return runFenceAction('onenter', geoFenceName, geoPoint, asyncHandler);
};

var GeoFenceActions = {
  run: runFenceAction,

  enter: runOnEnterAction,
  stay: runOnStayAction,
  exist: runOnExitAction
};

exports.default = GeoFenceActions;