'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sendSocialLoginRequest = undefined;

var _async = require('../../request/async');

var _async2 = _interopRequireDefault(_async);

var _urls = require('../../urls');

var _urls2 = _interopRequireDefault(_urls);

var _request = require('../../request');

var _request2 = _interopRequireDefault(_request);

var _localCache = require('../../local-cache');

var _localCache2 = _interopRequireDefault(_localCache);

var _currentUser = require('../current-user');

var _utils = require('../utils');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var sendSocialLoginRequest = exports.sendSocialLoginRequest = function sendSocialLoginRequest(accessToken, socialType, fieldsMapping, stayLoggedIn, asyncHandler) {
  if (!accessToken) {
    return asyncHandler.fault('"accessToken" is missing.');
  }

  var interimCallback = new _async2.default(function (r) {
    (0, _currentUser.setLocalCurrentUser)((0, _utils.parseResponse)(r));
    _localCache2.default.set('stayLoggedIn', !!stayLoggedIn);
    asyncHandler.success((0, _utils.getUserFromResponse)((0, _currentUser.getLocalCurrentUser)()));
  }, function (e) {
    asyncHandler.fault(e);
  });

  _request2.default.post({
    url: _urls2.default.userSocialLogin(socialType),
    isAsync: true,
    asyncHandler: interimCallback,
    data: {
      accessToken: accessToken,
      fieldsMapping: fieldsMapping
    }
  });
};