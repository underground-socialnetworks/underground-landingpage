'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.logout = logout;

var _utils = require('../utils');

var _utils2 = _interopRequireDefault(_utils);

var _urls = require('../urls');

var _urls2 = _interopRequireDefault(_urls);

var _request = require('../request');

var _request2 = _interopRequireDefault(_request);

var _localCache = require('../local-cache');

var _localCache2 = _interopRequireDefault(_localCache);

var _currentUser = require('./current-user');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function logout() /** async */{
  var responder = _utils2.default.extractResponder(arguments);
  var isAsync = !!responder;
  var errorCallback = isAsync ? responder.fault : null;
  var successCallback = isAsync ? responder.success : null;
  var result = {};

  var logoutUser = function logoutUser() {
    _localCache2.default.remove('user-token');
    _localCache2.default.remove('current-user-id');
    _localCache2.default.remove('stayLoggedIn');
    (0, _currentUser.setLocalCurrentUser)(null);
  };

  var onLogoutSuccess = function onLogoutSuccess() {
    logoutUser();
    if (_utils2.default.isFunction(successCallback)) {
      successCallback();
    }
  };

  var onLogoutError = function onLogoutError(e) {
    if (_utils2.default.isObject(e) && [3064, 3091, 3090, 3023].indexOf(e.code) !== -1) {
      logoutUser();
    }
    if (_utils2.default.isFunction(errorCallback)) {
      errorCallback(e);
    }
  };

  if (responder) {
    responder.fault = onLogoutError;
    responder.success = onLogoutSuccess;
  }

  try {
    result = _request2.default.get({
      url: _urls2.default.userLogout(),
      isAsync: isAsync,
      asyncHandler: responder
    });
  } catch (e) {
    onLogoutError(e);
  }

  if (isAsync) {
    return result;
  } else {
    logoutUser();
  }
}