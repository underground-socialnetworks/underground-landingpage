'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.put = put;

var _utils = require('../utils');

var _utils2 = _interopRequireDefault(_utils);

var _urls = require('../urls');

var _urls2 = _interopRequireDefault(_urls);

var _async = require('../request/async');

var _async2 = _interopRequireDefault(_async);

var _request = require('../request');

var _request2 = _interopRequireDefault(_request);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function put(key, value, timeToLive, asyncHandler) {
  if (!key || !_utils2.default.isString(key)) {
    throw new Error('Cache Key must be non empty String');
  }

  if (timeToLive instanceof _async2.default) {
    asyncHandler = timeToLive;
    timeToLive = undefined;
  }

  if (timeToLive && !_utils2.default.isNumber(timeToLive)) {
    throw new Error('Cache timeToLive must be Number');
  }

  if (_utils2.default.isObject(value) && value.constructor !== Object) {
    value.___class = value.___class || _utils2.default.getClassName(value);
  }

  if (asyncHandler) {
    asyncHandler = _utils2.default.wrapAsync(asyncHandler);
  }

  return _request2.default.put({
    url: _urls2.default.cacheItem(key) + (timeToLive ? '?timeout=' + timeToLive : ''),
    headers: { 'Content-Type': 'application/json' },
    data: JSON.stringify(value),
    isAsync: !!asyncHandler,
    asyncHandler: asyncHandler
  });
}