'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.wrapAsync = exports.getUserFromResponse = exports.parseResponse = undefined;

var _utils = require('../utils');

var _utils2 = _interopRequireDefault(_utils);

var _async = require('../request/async');

var _async2 = _interopRequireDefault(_async);

var _localCache = require('../local-cache');

var _localCache2 = _interopRequireDefault(_localCache);

var _user = require('./user');

var _user2 = _interopRequireDefault(_user);

var _currentUser = require('./current-user');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var parseResponse = exports.parseResponse = function parseResponse(data, stayLoggedIn) {
  var user = new _user2.default();
  _utils2.default.deepExtend(user, data);

  if (stayLoggedIn) {
    _localCache2.default.set('stayLoggedIn', stayLoggedIn);
  }

  return user;
};

var getUserFromResponse = exports.getUserFromResponse = function getUserFromResponse(user) {
  _localCache2.default.set('current-user-id', user.objectId);

  var userToken = user['user-token'];

  if (userToken && _localCache2.default.get('stayLoggedIn')) {
    _localCache2.default.set('user-token', userToken);
  }

  return new _user2.default(user);
};

var wrapAsync = exports.wrapAsync = function wrapAsync(asyncHandler, stayLoggedIn) {
  var success = function success(data) {
    (0, _currentUser.setLocalCurrentUser)(parseResponse(_utils2.default.tryParseJSON(data), stayLoggedIn));

    asyncHandler.success(getUserFromResponse((0, _currentUser.getLocalCurrentUser)()));
  };

  var error = function error(data) {
    asyncHandler.fault(data);
  };

  return new _async2.default(success, error);
};