'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.login = login;

var _utils = require('../utils');

var _utils2 = _interopRequireDefault(_utils);

var _urls = require('../urls');

var _urls2 = _interopRequireDefault(_urls);

var _request = require('../request');

var _request2 = _interopRequireDefault(_request);

var _localCache = require('../local-cache');

var _localCache2 = _interopRequireDefault(_localCache);

var _currentUser = require('./current-user');

var _utils3 = require('./utils');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function login(login, password, stayLoggedIn) /** async */{
  if (!login) {
    throw new Error('Login can not be empty');
  }

  if (!password) {
    throw new Error('Password can not be empty');
  }

  stayLoggedIn = stayLoggedIn === true;

  _localCache2.default.remove('user-token');
  _localCache2.default.remove('current-user-id');
  _localCache2.default.set('stayLoggedIn', false);

  var responder = _utils2.default.extractResponder(arguments);
  var isAsync = !!responder;

  if (responder) {
    responder = (0, _utils3.wrapAsync)(responder, stayLoggedIn);
  }

  var data = {
    login: login,
    password: password
  };

  var result = _request2.default.post({
    url: _urls2.default.userLogin(),
    isAsync: isAsync,
    asyncHandler: responder,
    data: data
  });

  if (!isAsync && result) {
    (0, _currentUser.setLocalCurrentUser)((0, _utils3.parseResponse)(result, stayLoggedIn));

    result = (0, _utils3.getUserFromResponse)((0, _currentUser.getLocalCurrentUser)());
  }

  return result;
}